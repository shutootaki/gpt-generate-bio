import Head from "next/head";
import { Inter } from "@next/font/google";
import { useState } from "react";
import { AnimatePresence } from "framer-motion";
import { motion } from "framer-motion";
import { Toaster, toast } from "react-hot-toast";

import { Footer } from "@/components/Footer";
import { Header } from "@/components/Header";
import { InputPanel } from "@/components/InputPanel";
import { DropDown } from "@/components/DropDown";
import { GenerateButton } from "@/components/GenerateButton";
import { OutputPanel } from "@/components/OutputPanel";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [loading, setLoading] = useState(false);
  const [bio, setBio] = useState("");
  const [vibe, setVibe] = useState("Professional");
  const [generatedBios, setGeneratedBios] = useState("");

  const prompt =
    vibe === "Funny"
      ? `下記の"入力欄"以降の内容を基に、40字~80字以内の誰もが笑ってしまう面白い自己紹介文を2つ考えて下さい。また、作成において以下の点を必ず守って下さい。
      ・2つの自己消化文の先頭に"1.","2."と付ける。
      入力欄[${bio}${bio.slice(-1) === "。" ? "" : "。"}]`
      : `下記の"input"以降の内容を基に、${vibe}な40文字以内の自己紹介文を2つ考えて下さい。また、作成において以下の点を必ず守って下さい。
      ・2つの自己消化文の先頭に"1.","2."と付ける。
      入力欄[${bio}${bio.slice(-1) === "。" ? "" : "。"}]`;

  const generateBio = async (e: React.MouseEvent) => {
    e.preventDefault();
    setGeneratedBios("");
    setLoading(true);
    const response = await fetch("/api/generate", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ prompt }),
    });
    console.log({ data: { response } });

    if (!response.ok) throw new Error(response.statusText);

    const data = response.body;
    if (!data) return;

    const reader = data.getReader();
    const decoder = new TextDecoder();
    let done = false;

    while (!done) {
      const { value, done: doneReading } = await reader.read();
      done = doneReading;
      const chunkValue = decoder.decode(value);
      setGeneratedBios((prev) => prev + chunkValue);
    }
    setLoading(false);
  };

  return (
    <div className="flex mx-auto flex-col items-center justify-center py-2 min-h-screen drop-shadow-lg">
      <Head>
        <title>GPT-BIOs</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className="flex flex-1 w-full flex-col items-center justify-center text-center px-4 mt-12 sm:mt-20">
        <h1 className="sm:text-6xl text-4xl max-w-3xl font-bold text-slate-100 border-2 p-10 rounded-2xl first:">
          Generate your Bio with{" "}
          <p className="text-purple-600 drop-shadow-sm mt-5">GPT-3</p>
        </h1>
        <InputPanel setBio={setBio} />
        <DropDown vibe={vibe} setVibe={setVibe} />
        <Toaster
          position="top-center"
          reverseOrder={false}
          toastOptions={{ duration: 2000 }}
        />
        <GenerateButton generateBio={generateBio} loading={loading} />
        <OutputPanel>
          <AnimatePresence>
            <motion.div className="space-y-10 my-10">
              {generatedBios && (
                <>
                  <div>
                    <h2 className="sm:text-4xl text-3xl font-bold text-slate-100 mx-auto">
                      Your Generated Bio
                    </h2>
                  </div>
                  <div className="space-y-8 flex flex-col items-center justify-center max-w-xl mx-auto">
                    {generatedBios
                      .replace("1. ", "")
                      .split("2.")
                      .map((bio, i) => (
                        <div
                          className="bg-slate-100	 text-stone-900 rounded-xl shadow-md p-4 hover:bg-gray-400 transition cursor-copy border"
                          key={i}
                          onClick={() => {
                            navigator.clipboard.writeText(generatedBios);
                            toast("Bio copied to clipboard", {
                              icon: "✂️",
                            });
                          }}
                        >
                          <p>
                            {i + 1}. {bio}
                          </p>
                        </div>
                      ))}
                  </div>
                </>
              )}
            </motion.div>
          </AnimatePresence>
        </OutputPanel>
      </main>
      <Footer />
    </div>
  );
}
